name: Docker CI/CD for Web Client

defaults:
  run:
    working-directory: ./clients
    
on: 
  push:
    branches:
      - main
  # Run tests for any PR
  pull_request:
env:
  IMAGE_NAME: web-client
  REPO_NAME: hollowsunsets
jobs:
  # Push image to Docker Hub
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Get all changed files
        id: changed-files
        uses: tj-actions/changed-files@v6.3
        with:
          files: |
            clients/src
            default.conf
            clients/public
           
      - name: Install NPM packages
        if: steps.changed-files.outputs.any_changed == 'true'
        run: npm ci
      
      - name: Build React app
        if: steps.changed-files.outputs.any_changed == 'true'
        run: CI=false npm run build

      - name: Build image
        if: steps.changed-files.outputs.any_changed == 'true'
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        if: steps.changed-files.outputs.any_changed == 'true'
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}"  --password-stdin

      - name: Push image
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          IMAGE_ID=$REPO_NAME/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  deploy:
    needs: push
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
    steps: 
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0

    - name: Get all changed files
      id: changed-files
      uses: tj-actions/changed-files@v6.3
      with:
        files: |
          clients/
    
    - name: Configure SSH
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/staging.key
        chmod 600 ~/.ssh/staging.key
        cat >>~/.ssh/config <<END
        Host staging
          HostName ${{ secrets.WEB_CLIENT_HOST }}
          User ec2-user
          IdentityFile ~/.ssh/staging.key
          StrictHostKeyChecking no
        END
        
    - name: SSH and deploy client
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        ssh staging < ./update_web_client.sh
